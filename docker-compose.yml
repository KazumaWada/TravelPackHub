version: '3.8'

services:
  app:
    platform: linux/amd64
    build: .
    ports:
      - "3000:3000"  # Node.jsアプリケーションがリッスンするポート
      # - "9229:9229"  # debug mode
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=mydatabase
    volumes:
    #- <ホストのパス>:<コンテナのパス>
      - .:/app
      - /app/node_modules
    # npm installとdebugをミックスしている。
    # command: sh -c "npm install && npm run debug" #nodemanの追加&nodemoduleをvolumeにマウントして毎回実行させないようにさせるあとで。
    command: npm start  # 本番環境では通常スタートスクリプトだけで十分

  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: mydatabase
    ports:
      - "3306:3306"  
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        # root@d0a83b8f94d1:/app# ls /etc/mysql/
        # my.cnf->pathはok!
      - ./my.cnf:/etc/mysql/my.cnf #文字化け対策
      #docker-entrypoint-initdb.d: dockerが起動時に実行されるdir.公式で決まっている。
      #初期化やsetupするファイルがある場合が多い。↓


volumes:
  db_data: